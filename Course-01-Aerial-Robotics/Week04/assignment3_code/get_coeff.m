function [coeff, A, b] = get_coeff(waypoints)
% Inputs:
%       wapoints: (n+1)*1
%       S:        (n+1)*1
% Outputs:
%       coeff:     n*1
%       A:         8n*8n
%       b:         8n*1
    n = size(waypoints,2)-1; % number of segments P1...Pn
    A = zeros(8*n, 8*n);
    % The variables in Ax and b are in the following order: (Ax = b)
    % [P1(S0); P2(S1); ...; Pn(Sn-1); P1(S1); ...; Pn(Sn); % 2n
    %  P1_d(S0); P1_2d(S0); P1_3d(S0); Pn_d(Sn); Pn_2d(Sn); Pn_3d(Sn); % 6
    %  P1_d(S1)-P2_d(S1); ...; Pn-1_d(Sn-1)-Pn_d(Sn-1); ...; P1_6d(S1)-P2_6d(S1); ...; Pn-1_6d(Sn-1)-Pn_6d(Sn-1)] % 6*n-6
    % [w0;     w1;      ...; wn-1;     w1;    ...; wn; % 2n
    %  0;        0;         0;         0;         0;        0; % 6
    %  0;                 ...; 0;                   ...; 0;                     ...; 0]
    %   
    % 2*n + 6 + 6(n-1) = 8*n 
    % row 1 - n
    for i = 1:n
        A(i, i*8) = 1; % Pn(Sn-1)
    end
    % row n+1 - 2n
    for i = n+1:2*n
        j = i-n;
        A(i, (j-1)*8+1 : (j-1)*8+8) = 1; % Pn(Sn)
    end
    % row 2n+1 - 2n+6
    A(2*n+1, 1:8) = [0, 0, 0, 0, 0, 0, 1, 0]; % P1_d(S0)
    A(2*n+2, 1:8) = [0, 0, 0, 0, 0, 2, 0, 0]; % P1_2d(S0)
    A(2*n+3, 1:8) = [0, 0, 0, 0, 6, 0, 0, 0]; % P1_3d(S0)
    A(2*n+4, (n-1)*8+1:(n-1)*8+8) = [7, 6, 5, 4, 3, 2, 1, 0]; % Pn_d(Sn)
    A(2*n+5, (n-1)*8+1:(n-1)*8+8) = [42, 30, 20, 12, 6, 2, 0, 0]; % Pn_2d(Sn)
    A(2*n+6, (n-1)*8+1:(n-1)*8+8) = [210, 120, 60, 24, 6, 0, 0, 0]; % Pn_3d(Sn)
    
    % row 2*n+7 : 3*n+5
    p1 = [7, 6, 5, 4, 3, 2, 1, 0];   
    p0 = [0, 0, 0, 0, 0, 0, 1, 0];
    for  i = 2*n+7 : 3*n+5
        j = i - (2*n+6);
        A(i, (j-1)*8+1:(j-1)*8+8) = p1; % Pj_d(Sj)  
        A(i, (j-1)*8+9:(j-1)*8+16) = -p0;% -Pj+1_d(Sj)  
    end
    % 3*n+6 : 4*n+4
    p1 = [7*6, 6*5, 5*4, 4*3, 3*2, 2*1, 0, 0];    
    p0 = [0, 0, 0, 0, 0, 2*1, 0, 0];
    for  i = 3*n+6 : 4*n+4
        j = i - (3*n+5);
        A(i, (j-1)*8+1:(j-1)*8+8) = p1; % Pj_2d(Sj)  
        A(i, (j-1)*8+9:(j-1)*8+16) = -p0;% -Pj+1_2d(Sj)  
    end
    % 4*n+5 : 5*n+3
    p1 = [7*6*5, 6*5*4, 5*4*3, 4*3*2, 3*2*1, 0, 0, 0];    
    p0 = [0, 0, 0, 0, 3*2*1, 0, 0, 0];
    for  i = 4*n+5 : 5*n+3
        j = i - (4*n+4);
        A(i, (j-1)*8+1:(j-1)*8+8) = p1; % Pj_3d(Sj)  
        A(i, (j-1)*8+9:(j-1)*8+16) = -p0;% -Pj+1_3d(Sj)  
    end
    % 5*n+2 : 6*n+2
    p1 = [7*6*5*4, 6*5*4*3, 5*4*3, 4*3*2, 0, 0, 0, 0];    
    p0 = [0, 0, 0, 4*3*2*1, 0, 0, 0, 0];
    for  i = 5*n+4 : 6*n+2
        j = i - (5*n+3);
        A(i, (j-1)*8+1:(j-1)*8+8) = p1; % Pj_4d(Sj)  
        A(i, (j-1)*8+9:(j-1)*8+16) = -p0;% -Pj+1_4d(Sj)      
    end    
    % 6*n+3 : 7*n+1
    p1 = [7*6*5*4*3, 6*5*4*3*2, 5*4*3*2*1, 0, 0, 0, 0, 0];    
    p0 = [0, 0, 5*4*3*2*1, 0, 0, 0, 0, 0];
    for  i = 6*n+3 : 7*n+1
        j = i - (6*n+2);
        A(i, (j-1)*8+1:(j-1)*8+8) = p1; % Pj_5d(Sj)  
        A(i, (j-1)*8+9:(j-1)*8+16) = -p0;% -Pj+1_5d(Sj)  
    end    
    % 7*n+2 : 8*n
    p1 = [7*6*5*4*3*2, 6*5*4*3*2*1, 0, 0, 0, 0, 0, 0];    
    p0 = [0, 6*5*4*3*2*1, 0, 0, 0, 0, 0, 0];
    for  i = 7*n+2 : 8*n
        j = i - (7*n+1);
        A(i, (j-1)*8+1:(j-1)*8+8) = p1; % Pj_6d(Sj)  
        A(i, (j-1)*8+9:(j-1)*8+16) = -p0;% -Pj+1_6d(Sj)  
    end    
    
    b = [waypoints(:, 1:n)'; waypoints(:, 2:n+1)'; zeros(6,3); zeros(6*n-6,3)];
    coeff = A\b;
end
